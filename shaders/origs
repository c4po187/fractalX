// Original color coefficient
float c = sqrt( float( count ) / 100 );
// log #
float c = log( ( z.x * z.x + z.y * z.y ) / log( count + 1 ) );
float c = ( count + 1 ) - log( log( z.x * z.x + z.y * z.y ) ) / log( 1.1 );
float c = log( 0.66274 / sqrt( float( count ) / 100 ) );

// Original color conditional
if ( count > float( iterations / 100 ) )
			gl_FragColor = rgbtohsv( ( start_color * c ) + ( end_color * ( 1 - c ) ) );
		else
			gl_FragColor = rgbtohsv( ( end_color * c ) + ( test_color * ( 1 - c ) ) );
			
// Mid color
( test_color / ( 1.0 - c ) ) +

// Good stable color
gl_FragColor = ( start_color * k ) + ( ( test_color * k ) * log( 0.075 ) ) + ( end_color * ( 1 - k ) );

if ( count > 0 && count < ( iterations / 7 ) )
			gl_FragColor = color0 * ( 1 - k );
		else if ( count >= ( iterations / 7 ) && count < ( iterations / 7 ) * 2 )
			gl_FragColor = color1 * ( 1 - k );
		else if ( count >= ( iterations / 7 ) * 2 && count < ( iterations / 7 ) * 3 )
			gl_FragColor = color2 * ( 1 - k );
		else if ( count >= ( iterations / 7 ) * 3 && count < ( iterations / 7 ) * 4 )
			gl_FragColor = color3 * ( 1 - k );
		else if ( count >= ( iterations / 7 ) * 4 && count < ( iterations / 7 ) * 5 )
			gl_FragColor = color4 * ( 1 - k );
		else if ( count >= ( iterations / 7 ) * 5 && count < ( iterations / 7 ) * 6 )
			gl_FragColor = color5 * ( 1 - k );
		else if ( count >= ( iterations / 7 ) * 6 && count < ( iterations / 7 ) * 7 )
			gl_FragColor = color6 * ( 1 - k );
